<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.39">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.30.0">
      <projectUrl>https://github.com/tuimac/tagdns</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <hudson.triggers.SCMTrigger>
          <spec>H/2 * * * *</spec>
          <ignorePostCommitHooks>false</ignorePostCommitHooks>
        </hudson.triggers.SCMTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.80">
    <script>
pipeline {
    agent any
    environment {
        NAME = "tagdns"
        DOCKERFILE = "/root/tagdns/docker/tagdns"
    }
    stages("Test Tagdns") {
        stage("Build Image") {
            steps {
                dir("${DOCKERFILE}") {
                    sh "docker build -t ${NAME} ."
                }
            }
            post {
                failure {
                    sh "docker rmi ${NAME}"
                    echo "Failed to build image!"
                }
            }
        }
        stage("Start Container") {
            steps {
                sh "docker container create -it --name ${NAME} --network=br0 ${NAME} /bin/bash"
                sh "docker start ${NAME}"
            }
            post {
                failure {
                    sh "docker stop ${NAME}"
                    sh "docker rm ${NAME}"
                    sh "docker rmi docker_${NAME}"
                    sh "docker container prune -f"
                    sh "docker image prune -f"
                    echo "Failed to start container!"
                }
            }
        }
    }
    post {
        success {
            sh "docker stop ${NAME}"
            sh "docker rm ${NAME}"
            sh "docker rmi ${NAME}"
            sh "docker container prune -f"
            sh "docker image prune -f"
            echo "Successed!"
        }
        failure {
            echo "Failed to delete!"
        }
    }
}
    </script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>

